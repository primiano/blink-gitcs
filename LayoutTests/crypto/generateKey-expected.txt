Tests cypto.subtle.generateKey.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS crypto.subtle.generateKey(invalidAesKeyGen, extractable, keyUsages) threw exception NotSupportedError: The implementation did not support the requested type of object or operation..
PASS crypto.subtle.generateKey(invalidAesKeyGen, extractable, keyUsages) threw exception NotSupportedError: The implementation did not support the requested type of object or operation..
PASS crypto.subtle.generateKey(invalidAesKeyGen, extractable, keyUsages) threw exception NotSupportedError: The implementation did not support the requested type of object or operation..
PASS crypto.subtle.generateKey(aesCbc, extractable, -1) threw exception TypeError: Type error.
PASS crypto.subtle.generateKey(invalidHmac256, false, ['sign']) threw exception NotSupportedError: The implementation did not support the requested type of object or operation..
PASS key.type is 'private'
PASS key.extractable is true
PASS key.algorithm.name is 'AES-CBC'
PASS key.algorithm.length is 1024
PASS key.usages.join(',') is 'encrypt,decrypt'
PASS key.type is 'private'
PASS key.extractable is false
PASS key.algorithm.name is 'HMAC'
PASS key.algorithm.hash.name is 'SHA-256'
PASS key.algorithm.length is null
PASS key.usages.join(',') is 'sign'
PASS key.type is 'private'
PASS key.extractable is false
PASS key.algorithm.name is 'HMAC'
PASS key.algorithm.hash.name is 'SHA-256'
PASS key.algorithm.length is 48
PASS key.usages.join(',') is 'sign'
PASS successfullyParsed is true

TEST COMPLETE

